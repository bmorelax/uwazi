// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Settings routes POST should have a validation schema 1`] = `
Object {
  "children": Object {
    "__v": Object {
      "invalids": Array [
        Infinity,
        -Infinity,
      ],
      "type": "number",
    },
    "_id": Object {
      "invalids": Array [
        "",
      ],
      "rules": Array [
        Object {
          "arg": Object {
            "pattern": /\\^\\[0-9a-fA-F\\]\\{24\\}\\$/,
          },
          "name": "regex",
        },
      ],
      "type": "string",
    },
    "allowedPublicTemplates": Object {
      "flags": Object {
        "sparse": false,
      },
      "items": Array [
        Object {
          "invalids": Array [
            "",
          ],
          "type": "string",
        },
      ],
      "type": "array",
    },
    "analyticsTrackingId": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
    "contactEmail": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
    "cookiepolicy": Object {
      "falsy": Array [
        false,
      ],
      "flags": Object {
        "insensitive": true,
      },
      "truthy": Array [
        true,
      ],
      "type": "boolean",
    },
    "custom": Object {
      "type": "any",
    },
    "customCSS": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
    "dateFormat": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
    "features": Object {
      "children": Object {
        "_id": Object {
          "invalids": Array [
            "",
          ],
          "type": "string",
        },
        "favorites": Object {
          "falsy": Array [
            false,
          ],
          "flags": Object {
            "insensitive": true,
          },
          "truthy": Array [
            true,
          ],
          "type": "boolean",
        },
        "semanticSearch": Object {
          "falsy": Array [
            false,
          ],
          "flags": Object {
            "insensitive": true,
          },
          "truthy": Array [
            true,
          ],
          "type": "boolean",
        },
        "topicClassification": Object {
          "falsy": Array [
            false,
          ],
          "flags": Object {
            "insensitive": true,
          },
          "truthy": Array [
            true,
          ],
          "type": "boolean",
        },
      },
      "type": "object",
    },
    "filters": Object {
      "flags": Object {
        "sparse": false,
      },
      "items": Array [
        Object {
          "children": Object {
            "_id": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
            "id": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
            "items": Object {
              "type": "any",
            },
            "name": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
          },
          "type": "object",
        },
      ],
      "type": "array",
    },
    "home_page": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
    "languages": Object {
      "flags": Object {
        "sparse": false,
      },
      "items": Array [
        Object {
          "children": Object {
            "_id": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
            "default": Object {
              "falsy": Array [
                false,
              ],
              "flags": Object {
                "insensitive": true,
              },
              "truthy": Array [
                true,
              ],
              "type": "boolean",
            },
            "key": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
            "label": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
            "rtl": Object {
              "falsy": Array [
                false,
              ],
              "flags": Object {
                "insensitive": true,
              },
              "truthy": Array [
                true,
              ],
              "type": "boolean",
            },
          },
          "type": "object",
        },
      ],
      "type": "array",
    },
    "links": Object {
      "flags": Object {
        "sparse": false,
      },
      "items": Array [
        Object {
          "children": Object {
            "_id": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
            "localID": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
            "title": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
            "url": Object {
              "invalids": Array [
                "",
              ],
              "type": "string",
            },
          },
          "type": "object",
        },
      ],
      "type": "array",
    },
    "mailerConfig": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
    "mapTilerKey": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
    "matomoConfig": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
    "private": Object {
      "falsy": Array [
        false,
      ],
      "flags": Object {
        "insensitive": true,
      },
      "truthy": Array [
        true,
      ],
      "type": "boolean",
    },
    "project": Object {
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
    "publicFormDestination": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
    "site_name": Object {
      "type": "string",
      "valids": Array [
        "",
      ],
    },
  },
  "flags": Object {
    "presence": "required",
  },
  "type": "object",
}
`;
